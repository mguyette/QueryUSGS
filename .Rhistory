library(dataRetrieval)
siteNumbers <- c("02232500") #### USGS SITE NUMBERS
parameterCd <- c("00060")
startDate <- "2017-10-10"
endDate <- "2017-11-10"
test <- dataRetrieval(siteNumbers,parameterCd,startDate,endDate)
test <- readNWISuv(siteNumbers,parameterCd,startDate,endDate)
View(test)
parameterCd <- c("00060","00065")
test <- readNWISuv(siteNumbers,parameterCd,startDate,endDate)
View(test)
tz <= "EST"
tz <- "EST"
test <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
tz <- "America/New York"
test <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
OlsonNames
OlsonNames()
tz <- "America/New_York"
test <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
View(test)
parameterCdFile
params <- parameterCdFile
View(params)
View(test)
parameterCd <- c("00060","00061","00065") #### USGS Parameter Codes
test <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
View(parameterCdFile)
test <- renameNWISColumns(test)
fileName <- paste(siteNumbers,collapse = "_",sep = "")
fileName <- paste(siteNumbers,collapse = "_",sep = "")
siteNumbers <- c("02232500","02232400","02234000") # USGS Site Numbers ####
fileName <- paste(siteNumbers,collapse = "_",sep = "")
frequency <- c("daily","instantaneous")
"daily" %in% frequency
frequency %in% "daily"
"instantaneous" %in% frequency
frequency <- "daily"
"instantaneous" %in% frequency
dvData <- readNWISdv(siteNumbers,parameterCd,startDate,endDate,tz)
View(stateCd)
## Frequency
## Select "daily" (daily summaries), "instantaneous" (whichever frequency
## the data is collected), or "daily","instantaneous"
## Must be in quotes
frequency <- c("daily","instantaneous")
## USGS site(s)
## For one station, place inside quotes within the parentheses below
##     e.g., siteNumbers <- c("02232500")
## For more than one station, place inside quotes separated by commas within the
## parentheses below
##     e.g., siteNumbers <- c("02232500","02232400","02234000")
siteNumbers <- c("02232500","02232400","02234000") # USGS Site Numbers ####
## Parameter(s)
## For one parameter code, place inside quotes within the parentheses below
##     e.g., parameterCd <- c("00065")
## For more than one parameter code, place inside quotes separated by commas
## within the parentheses below
##     e.g., parameterCd <- c("00060","00065")
## Common parameter codes include:
##     00060 - Discharge, cubic feet per second
##     00065 - Gage height, feet
## For more parameter codes you can uncomment the line below to view
## a searchable data table of all USGS parameter codes
# View(parameterCdFile)
## Or you can search for parameter codes at the website:
## https://nwis.waterdata.usgs.gov/nwis/pmcodes/
parameterCd <- c("00060","00065") # USGS Parameter Codes ####
## Start date
## May be left blank to retrieve the entire period of record
## Must be formatted as "YYYY-MM-DD"
startDate <- "2017-10-10" # Start Date ####
## End date
## May be left blank to retrieve the entire period of record
## Must be formatted as "YYYY-MM-DD"
endDate <- "2017-11-10" # End Date ####
## Statistic code
## Only used for daily summaries
## For one stat code, place inside quotes within the parentheses below
##     e.g., statCd <- c("00003")
## For more than one stat code, place inside quotes separated by commas
## within the parentheses below
##     e.g., statCd <- c("00001","00002","00003")
## Common stat codes include:
##     00001 - Maximum
##     00002 - Minimum
##     00003 - Mean
##     00006 - Sum
##     00008 - Median
statCd <- c("00003") # Statistic code ####
## Time Zone
## Change only if you prefer to show a different time zone
## If you are interested in EST, use "EST"
## If you are interested in EDT, use "America/New_York"
tz <- "EST" # Time Zone ####
## Export Path
## The path to the folder to which you would like to download
## any output files
path <- "./Exports" # Export path ####
getUSGSdata <- function(frequency,siteNumbers,parameterCd,
startDate,endDate,statCd,tz,path) {
filePrefix <- paste(siteNumbers,collapse = "_",sep = "")
if("daily" %in% frequency) {
dvData <- readNWISdv(siteNumbers,parameterCd,startDate,endDate,statCd,tz)
dvData <- renameNWISColumns(dvData)
write.csv(dvData,paste(path,"/",filePrefix,"_inst.csv",sep = ""),
row.names = F, na = "")
}
if("instantaneous" %in% frequency) {
uvData <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
uvData <- renameNWISColumns(uvData)
write.csv(uvData,paste(path,"/",filePrefix,"_inst.csv",sep = ""),
row.names = F, na = "")
}
}
getUSGSdata(frequency,siteNumbers,parameterCd,startDate,endDate,statCd,tz,path)
getUSGSdata <- function(frequency,siteNumbers,parameterCd,
startDate,endDate,statCd,tz,path) {
filePrefix <- paste(siteNumbers,collapse = "_",sep = "")
if("daily" %in% frequency) {
dvData <- readNWISdv(siteNumbers,parameterCd,startDate,endDate,statCd)
dvData <- renameNWISColumns(dvData)
write.csv(dvData,paste(path,"/",filePrefix,"_inst.csv",sep = ""),
row.names = F, na = "")
}
if("instantaneous" %in% frequency) {
uvData <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
uvData <- renameNWISColumns(uvData)
write.csv(uvData,paste(path,"/",filePrefix,"_inst.csv",sep = ""),
row.names = F, na = "")
}
}
getUSGSdata(frequency,siteNumbers,parameterCd,startDate,endDate,statCd,tz,path)
getUSGSdata <- function(frequency,siteNumbers,parameterCd,
startDate,endDate,statCd,tz,path) {
filePrefix <- paste(siteNumbers,collapse = "_",sep = "")
if("daily" %in% frequency) {
dvData <- readNWISdv(siteNumbers,parameterCd,startDate,endDate,statCd)
dvData <- renameNWISColumns(dvData)
write.csv(dvData,paste(path,"/",filePrefix,"_daily",Sys.Date,".csv",sep = ""),
row.names = F, na = "")
}
if("instantaneous" %in% frequency) {
uvData <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
uvData <- renameNWISColumns(uvData)
write.csv(uvData,paste(path,"/",filePrefix,"_inst",Sys.Date,".csv",sep = ""),
row.names = F, na = "")
}
}
getUSGSdata(frequency,siteNumbers,parameterCd,startDate,endDate,statCd,tz,path)
paste(path,"/",filePrefix,"_daily",Sys.Date,".csv",sep = "")
filePrefix <- paste(siteNumbers,collapse = "_",sep = "")
paste(path,"/",filePrefix,"_daily",Sys.Date,".csv",sep = "")
getUSGSdata <- function(frequency,siteNumbers,parameterCd,
startDate,endDate,statCd,tz,path) {
filePrefix <- paste(siteNumbers,collapse = "_",sep = "")
if("daily" %in% frequency) {
dvData <- readNWISdv(siteNumbers,parameterCd,startDate,endDate,statCd)
dvData <- renameNWISColumns(dvData)
write.csv(dvData,paste(path,"/",filePrefix,"_daily",Sys.Date(),".csv",sep = ""),
row.names = F, na = "")
}
if("instantaneous" %in% frequency) {
uvData <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
uvData <- renameNWISColumns(uvData)
write.csv(uvData,paste(path,"/",filePrefix,"_inst",Sys.Date(),".csv",sep = ""),
row.names = F, na = "")
}
}
getUSGSdata(frequency,siteNumbers,parameterCd,startDate,endDate,statCd,tz,path)
getUSGSdata <- function(frequency,siteNumbers,parameterCd,
startDate,endDate,statCd,tz,path) {
filePrefix <- paste(siteNumbers,collapse = "_",sep = "")
if("daily" %in% frequency) {
dvData <- readNWISdv(siteNumbers,parameterCd,startDate,endDate,statCd)
dvData <- renameNWISColumns(dvData)
write.csv(dvData,paste(path,"/",filePrefix,"_daily_",Sys.Date(),".csv",sep = ""),
row.names = F, na = "")
}
if("instantaneous" %in% frequency) {
uvData <- readNWISuv(siteNumbers,parameterCd,startDate,endDate,tz)
uvData <- renameNWISColumns(uvData)
write.csv(uvData,paste(path,"/",filePrefix,"_inst_",Sys.Date(),".csv",sep = ""),
row.names = F, na = "")
}
}
getUSGSdata(frequency,siteNumbers,parameterCd,startDate,endDate,statCd,tz,path)
source('C:/Users/mguyette/OneDrive - St. Johns River Water Management District/R/Special_Requests/QueryUSGS/Scripts/USGSDataRetrieval.R', echo=TRUE)
source('C:/Users/mguyette/OneDrive - St. Johns River Water Management District/R/Special_Requests/QueryUSGS/Scripts/USGSDataRetrieval.R', echo=TRUE)
dvData <- readNWISdv(siteNumbers,parameterCd,startDate,endDate,statCd)
View(dvData)
View(parameterCdFile)
